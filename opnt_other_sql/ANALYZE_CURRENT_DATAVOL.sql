/* SQL TO ANALYZE THE CURRENT CONDITIONS IN THE APP : THE QUESTIONS TO BE ASKED ARE:
- LATEST POSTS GROUPED BY TOPICID, COUNTRY CODE AND STP TYPE: TO SEE IF THERE IS AN EVEN DISTRIBUTION OF ALL THE TOPICS, COUNTRIES AND DISCUSSIONS/POSTS






*/

SELECT P.STP_PROC_NAME, P.TOPICID, P.POSTOR_COUNTRY_CODE, SUM(CASE WHEN U.BOT_FLAG = 'Y' AND P.DEMO_POST_FLAG = 'Y' THEN 1 ELSE 0 END)  POSTCNT
, SUM(CASE WHEN U.BOT_FLAG = 'Y' AND P.DEMO_POST_FLAG = 'N' THEN 1 ELSE 0 END)  DISCCNT
, SUM(CASE WHEN U.BOT_FLAG <> 'Y' THEN 1 ELSE 0 END) REALPOSTS
/* This SQL gives hoe many scrapes have been converted to Posts, Discussions and how many real user posts are there in the last x days */
FROM OPN_POSTS P, OPN_USERLIST U WHERE P.POST_BY_USERID = U.USERID 
AND P.POST_DATETIME > CURRENT_DATE() - INTERVAL 7 DAY GROUP BY P.STP_PROC_NAME, P.TOPICID, P.POSTOR_COUNTRY_CODE;

/* We can only control the Posts and Discussions - Since the posts are almost 0 for most combinations for the last 7 days
 * it is clear that the STP process is broken - the pyscrapes that are diverted to be converted to Posts are getting lost.
 * First fix is to use the STP_REMAINDER proc to start filling up some of the TOPICID-CCODE combos 
 * In order to do that, we need to firt know how many recent scrapes are sitting in the WSR or WSRL
 * */

SELECT SCRAPE_TOPIC, COUNTRY_CODE, COUNT(1)  FROM WEB_SCRAPE_RAW where SCRAPE_DATE >= CURRENT_DATE() - INTERVAL 1 DAY AND IFNULL(MOVED_TO_POST_FLAG, 'N') = 'N'
GROUP BY SCRAPE_TOPIC, COUNTRY_CODE ORDER BY 1, 2 DESC ;

/* Since there are a huge backlog of scrapes that have not been converted to posts, we need to do the clean-up first
 * Just delete everything that is > 3 days old */
 
SELECT COUNT(1) FROM WEB_SCRAPE_RAW WHERE SCRAPE_DATE <= CURRENT_DATE() - INTERVAL 2 DAY ;
DELETE FROM WEB_SCRAPE_RAW WHERE SCRAPE_DATE < CURRENT_DATE() - INTERVAL 2 DAY ;

SELECT *
/*W.ROW_ID, IFNULL(STR_TO_DATE(W.NEWS_DATE, '%b %d, %Y %H:%i:%s'), W.SCRAPE_DATE) SCRAPE_DATE
  , W.SCRAPE_TOPIC, SUBSTR(W.NEWS_URL, 1, 499) NEWS_URL, SUBSTR(W.NEWS_HEADLINE, 1, 499) NEWS_HEADLINE
  , SUBSTR(W.NEWS_EXCERPT, 1, 499) NEWS_EXCERPT, W.COUNTRY_CODE */
  FROM WEB_SCRAPE_RAW W
  WHERE W.SCRAPE_TOPIC = 'SCIENCE' AND IFNULL(W.MOVED_TO_POST_FLAG, 'N') = 'N' AND W.COUNTRY_CODE = 'GGG'
  AND IFNULL(NEWS_DATE, SCRAPE_DATE) IS NOT NULL 
  AND IFNULL(STR_TO_DATE(W.NEWS_DATE, '%b %d, %Y %H:%i:%s'), SCRAPE_DATE) 
  > CURRENT_DATE() - INTERVAL 2 DAY ;

CALL STP_REMAINDER(interest VARCHAR(25), TID INT, ccode VARCHAR(5), numdays INT, scrcount INT) ;


SELECT P.STP_PROC_NAME, P.TOPICID, P.POSTOR_COUNTRY_CODE, CASE WHEN TAG1_KEYID IS NOT NULL THEN 'TAGGED' ELSE 'UNTAGGED' END TAGSTATUS
, SUM(CASE WHEN U.BOT_FLAG = 'Y' AND P.DEMO_POST_FLAG = 'Y' THEN 1 ELSE 0 END)  POSTCNT
, SUM(CASE WHEN U.BOT_FLAG = 'Y' AND P.DEMO_POST_FLAG = 'N' THEN 1 ELSE 0 END)  DISCCNT
, SUM(CASE WHEN U.BOT_FLAG <> 'Y' THEN 1 ELSE 0 END) REALPOSTS
/* This SQL gives hoe many scrapes have been converted to Posts, Discussions and how many real user posts are there in the last x days */
FROM OPN_POSTS P, OPN_USERLIST U WHERE P.POST_BY_USERID = U.USERID 
AND P.POST_DATETIME > CURRENT_DATE() - INTERVAL 7 DAY GROUP BY P.STP_PROC_NAME, P.TOPICID, P.POSTOR_COUNTRY_CODE, CASE WHEN TAG1_KEYID IS NOT NULL THEN 'TAGGED' ELSE 'UNTAGGED' END;

/* found that most of the DISCUSSION posts were tagged - what tags are being used and how ? */

select * from OPN_POSTS WHERE POSTOR_COUNTRY_CODE = 'GGG' AND TOPICID = 3 AND POST_DATETIME > CURRENT_DATE() - INTERVAL 7 DAY ;

SELECT TOPICID, TAG1_KEYID, COUNT(1) FROM OPN_POSTS WHERE POST_ID > 1200000 AND OPN_POSTS.DEMO_POST_FLAG = 'Y' GROUP BY TOPICID, TAG1_KEYID ;

SELECT COUNT(1) FROM WEB_SCRAPE_RAW ;
CALL WSR_DEDUPE('BBC/SPORTS') ;
CALL WSR_DEDUPE_ALL() ;

SELECT SCRAPE_SOURCE, COUNT(1)  FROM WEB_SCRAPE_RAW where SCRAPE_DATE >= CURRENT_DATE() - INTERVAL 10 DAY AND IFNULL(MOVED_TO_POST_FLAG, 'N') = 'N'
GROUP BY SCRAPE_SOURCE ORDER BY 1, 2 DESC ;

SELECT COUNT(1) FROM WEB_SCRAPE_DEDUPE ;

SELECT * FROM WEB_SCRAPE_RAW wsr WHERE SCRAPE_SOURCE = 'HUFF/ENT' ;
UPDATE WEB_SCRAPE_RAW SET SCRAPE_SOURCE = 'HUFF/ENT', SCRAPE_TOPIC = 'ENT' WHERE SCRAPE_SOURCE = 'BBRT/TOP' ;

/* STP_REMAINDER: TO DISTRIBUTE THE EXCESS SCRAPES (THAT ARE NOT CONVERTED TO THE DISCUSSIONS) AMONG THE BOTS,
 * WE NEED TO DECIDE WHICH BOTS TO USE. THIS SHOULD BE MAINLY THE BOTS THAT HAVE HAD RECENT ADDITIONS TO THEIR CARTS
 * AND THE REST SHOULD GO TO THOSE THAT HAVE THE XYZNEWS KW IN THEIR CARTS ALREADY. THE SQL BELOW IS
 * TO FIND OUT THESSE BOTS IN AN EFFICIENT WAY */

SELECT C.ROW_ID, C.USERID, C.TOPICID, C.CART, C.KEYID, C.CREATION_DTM, C.LAST_UPDATE_DTM FROM OPN_USER_CARTS C, OPN_USERLIST U WHERE C.USERID = U.USERID 
AND U.BOT_FLAG = 'Y' AND U.COUNTRY_CODE = 'USA' AND C.TOPICID = 1 ORDER BY C.ROW_ID DESC ;

SELECT TOPICID, COUNT(1) FROM OPN_USER_CARTS WHERE CREATION_DTM > CURRENT_DATE() - INTERVAL 1 YEAR GROUP BY TOPICID ;
SELECT TOPICID, COUNT(1) FROM OPN_USER_CARTS GROUP BY TOPICID ;
SELECT MIN(ROW_ID) FROM OPN_USER_CARTS WHERE CREATION_DTM > CURRENT_DATE() - INTERVAL 1 YEAR ;

SELECT * FROM OPN_USER_CARTS ORDER BY ROW_ID DESC LIMIT 1000 ;
SELECT C.USERID, COUNT(1) FROM OPN_USER_CARTS C, OPN_USERLIST U WHERE C.USERID = U.USERID AND U.BOT_FLAG = 'Y' AND U.COUNTRY_CODE = 'USA' AND C.TOPICID = 1 GROUP BY C.USERID  ;
SELECT C.USERID, COUNT(DISTINCT (DATE_FORMAT(C.CREATION_DTM , '%b-%y'))) FROM OPN_USER_CARTS C, OPN_USERLIST U 
WHERE C.USERID = U.USERID AND U.BOT_FLAG = 'Y' AND U.COUNTRY_CODE = 'USA' AND C.TOPICID = 1 GROUP BY C.USERID  ;
SELECT C.USERID, COUNT(1) FROM OPN_USER_CARTS C, OPN_USERLIST U WHERE C.USERID = U.USERID AND U.BOT_FLAG = 'Y' AND U.COUNTRY_CODE = 'USA' AND C.TOPICID = 1 GROUP BY C.USERID HAVING COUNT(1) < 50 ;
SELECT COUNT(DISTINCT C.USERID) FROM OPN_USER_CARTS C, OPN_USERLIST U WHERE C.USERID = U.USERID AND U.BOT_FLAG = 'Y' AND U.COUNTRY_CODE = 'USA' AND C.TOPICID = 1  ;
SELECT C.KEYID, COUNT(C.USERID) FROM OPN_USER_CARTS C, OPN_USERLIST U WHERE C.USERID = U.USERID AND U.BOT_FLAG = 'Y' AND U.COUNTRY_CODE = 'USA' AND C.TOPICID = 1 GROUP BY C.KEYID  ;

SELECT C.KEYID, SUM(CASE WHEN U.COUNTRY_CODE = 'USA' THEN 1 ELSE 0 END) USA, SUM(CASE WHEN U.COUNTRY_CODE = 'IND' THEN 1 ELSE 0 END) IND
, SUM(CASE WHEN U.COUNTRY_CODE = 'GGG' THEN 1 ELSE 0 END) GGG
FROM OPN_USER_CARTS C, OPN_USERLIST U WHERE C.USERID = U.USERID AND U.BOT_FLAG = 'Y' AND C.TOPICID = 1 GROUP BY C.KEYID  ;


CALL getUserCarts(1, bringUUID(1000002) , 'ALPHA', 0, 100) ;

SELECT * FROM OPN_USER_CARTS WHERE USERID IN (1000002, 1000003, 1000004) -- ORDER BY USERID, CREATION_DTM DESC ;

SELECT * FROM OPN_P_KW WHERE KEYID IN (184239,183680,183787) ;

