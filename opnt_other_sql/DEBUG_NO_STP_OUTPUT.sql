/* deal with the issue of no posts created from the scrapes */
SET SQL_SAFE_UPDATES = 0;
/* Step 1: Confirm that no posts have been created from the scrapes */

SELECT P.STP_PROC_NAME, P.TOPICID, P.POSTOR_COUNTRY_CODE, SUM(CASE WHEN U.BOT_FLAG = 'Y' AND P.DEMO_POST_FLAG = 'Y' THEN 1 ELSE 0 END)  POSTCNT
, SUM(CASE WHEN U.BOT_FLAG = 'Y' AND P.DEMO_POST_FLAG = 'N' THEN 1 ELSE 0 END)  DISCCNT
, SUM(CASE WHEN U.BOT_FLAG <> 'Y' THEN 1 ELSE 0 END) REALPOSTS
FROM OPN_POSTS P, OPN_USERLIST U WHERE P.POST_BY_USERID = U.USERID 
AND P.POST_DATETIME > CURRENT_DATE() - INTERVAL 3 DAY GROUP BY P.STP_PROC_NAME, P.TOPICID, P.POSTOR_COUNTRY_CODE;

/* If the baove query doesn't return much for any topicid/ccode combo then that combo is having STP issues */

/* Step 2: Check if there are scrapes sitting in the WSR or WSRL - if they are, then deupe them
If they are sitting there for a long time then clean out everything that is older than 3 days */

SELECT SCRAPE_SOURCE, COUNT(1)  FROM WEB_SCRAPE_RAW where SCRAPE_DATE >= CURRENT_DATE() - INTERVAL 3 DAY AND IFNULL(MOVED_TO_POST_FLAG, 'N') = 'N'
GROUP BY SCRAPE_SOURCE ORDER BY 1, 2 DESC ;

SELECT SCRAPE_SOURCE, COUNT(1)  FROM WEB_SCRAPE_RAW_L where SCRAPE_DATE >= CURRENT_DATE() - INTERVAL 3 DAY AND IFNULL(MOVED_TO_POST_FLAG, 'N') = 'N'
GROUP BY SCRAPE_SOURCE ORDER BY 1, 2 DESC ;

SELECT SCRAPE_TOPIC, COUNTRY_CODE, COUNT(1)  FROM WEB_SCRAPE_RAW_L where SCRAPE_DATE >= CURRENT_DATE() - INTERVAL 3 DAY AND IFNULL(MOVED_TO_POST_FLAG, 'N') = 'N'
GROUP BY SCRAPE_TOPIC, COUNTRY_CODE ORDER BY 1, 2, 3 DESC ;

SELECT SCRAPE_TOPIC, COUNTRY_CODE, SCRAPE_SOURCE, COUNT(1)  FROM WEB_SCRAPE_RAW where SCRAPE_DATE >= CURRENT_DATE() - INTERVAL 10 DAY AND IFNULL(MOVED_TO_POST_FLAG, 'N') = 'N'
GROUP BY SCRAPE_TOPIC, COUNTRY_CODE, SCRAPE_SOURCE ORDER BY 1, 2, 3, 4 DESC ;

SELECT SCRAPE_TOPIC, COUNTRY_CODE, SCRAPE_SOURCE, COUNT(1)  FROM WEB_SCRAPE_RAW_L where SCRAPE_DATE >= CURRENT_DATE() - INTERVAL 3 DAY AND IFNULL(MOVED_TO_POST_FLAG, 'N') = 'N'
GROUP BY SCRAPE_TOPIC, COUNTRY_CODE, SCRAPE_SOURCE ORDER BY 1, 2, 3, 4 DESC ;

SELECT * FROM WEB_SCRAPE_RAW_L WHERE NEWS_URL IN (SELECT NEWS_URL FROM WSR_CONVERTED WHERE SCRAPE_DATE > CURRENT_DATE() - INTERVAL 30 DAY) ;

SELECT COUNT(1) FROM WEB_SCRAPE_RAW_L where SCRAPE_DATE < CURRENT_DATE() - INTERVAL 3 DAY AND IFNULL(MOVED_TO_POST_FLAG, 'N') = 'N' ;
SELECT COUNT(1) FROM WEB_SCRAPE_RAW where SCRAPE_DATE > CURRENT_DATE() - INTERVAL 3 DAY AND IFNULL(MOVED_TO_POST_FLAG, 'N') = 'N' ;

DELETE FROM WEB_SCRAPE_RAW_L where SCRAPE_DATE < CURRENT_DATE() - INTERVAL 2 DAY AND IFNULL(MOVED_TO_POST_FLAG, 'N') = 'N' ;
DELETE FROM WEB_SCRAPE_RAW where SCRAPE_DATE < CURRENT_DATE() - INTERVAL 3 DAY AND IFNULL(MOVED_TO_POST_FLAG, 'N') = 'N' ;

CALL WSRL_DEDUPE_ALL() ; -- CAME DOWN TO 3K FROM 10 K

/* Now we want to check what is the distribution of the scrapes that are deduped and sitting in the WSRL */

SELECT SCRAPE_TOPIC, COUNTRY_CODE, COUNT(1)  FROM WEB_SCRAPE_RAW_L GROUP BY SCRAPE_TOPIC, COUNTRY_CODE ORDER BY 1, 2 ;

/* Looks like we have 13 combinations - only the IND CELEB is missing - leave that aside for the time being  */

/* Now we start converting the scrapes to discussions and to posts - the scrapes from WSRL that are not converted to
 * discussions are auto divrted to instream posts - but by sending them to WSR. Hence we need to see what is happening in the WSR also  */

SELECT COUNT(1) FROM WEB_SCRAPE_RAW where SCRAPE_DATE > CURRENT_DATE() - INTERVAL 10 DAY AND IFNULL(MOVED_TO_POST_FLAG, 'N') = 'N' ;

/* there is nothing in WSR that is even 10 days old - so we delete all of it */

DELETE FROM WEB_SCRAPE_RAW ;

/* Prior to running the STD process, we need to see where we are in the OPN_POSTS */

SELECT * FROM OPN_POSTS ORDER BY POST_ID DESC LIMIT 100 ; -- 1411594 - SEEMS TO BE A NULL POST

SELECT * FROM WEB_SCRAPE_RAW_L WHERE LENGTH(NEWS_URL) < 5 OR NEWS_URL IS NULL ; -- SINCE THERE IS NO DATA FOR THIS, WE SHOULD NOT GET ANY NULL POST FROM THIS STD
SELECT * FROM WEB_SCRAPE_RAW_L WHERE SCRAPE_TOPIC = 'SCIENCE' AND MOVED_TO_POST_FLAG = 'Y';
SELECT * FROM WEB_SCRAPE_RAW ;

call STP_GRAND_T1GGG() ;

CALL STD_MANAGER(3, 'GGG', 'SCIENCE') ;

CALL STP_REMAINDER('SCIENCE', 3, 'GGG', 3, 150) ;

call getDiscussionsNW(bringuuid(1026625), 1, 0, 30) ;
call getInstreamNW(bringuuid(1026625), 1, 0, 30) ;

UPDATE WEB_SCRAPE_RAW_L SET MOVED_TO_POST_FLAG = 'N' WHERE MOVED_TO_POST_FLAG IS NULL ;

CALL STD_MANAGER(1, 'USA', 'POLITICS') ;
CALL STP_REMAINDER('POLITICS', 1, 'USA', 3, 150) ;

SELECT * FROM OPN_USERLIST WHERE USERID = 1026625 ;

SELECT C.TOPICID, K.KEYID, K.KEYWORDS, SUM(CASE WHEN U.COUNTRY_CODE = 'USA' THEN 1 ELSE 0 END) USACOUNT
, SUM(CASE WHEN U.COUNTRY_CODE = 'IND' THEN 1 ELSE 0 END) INDCOUNT
, SUM(CASE WHEN U.COUNTRY_CODE = 'GGG' THEN 1 ELSE 0 END) GGGCOUNT
FROM OPN_P_KW K, OPN_USER_CARTS C, OPN_USERLIST U
WHERE C.KEYID = K.KEYID AND C.USERID = U.USERID AND U.BOT_FLAG = 'Y' -- AND U.COUNTRY_CODE = 'USA'
AND K.KEYWORDS LIKE '%NEWS' AND K.NEWS_ONLY_FLAG = 'Y' GROUP BY C.TOPICID, K.KEYID, K.KEYWORDS ORDER BY K.KEYID ;

SELECT USERID, COUNT(KEYID) FROM OPN_USER_CARTS WHERE KEYID = 105087 GROUP BY USERID HAVING COUNT(KEYID) > 1 ;

SELECT USERID FROM OPN_XYZNEWS_BOTS WHERE TOPICID = 1 AND CCODE = 'USA' ORDER BY RAND() LIMIT 1 ;

SELECT * FROM WEB_SCRAPE_RAW_L WHERE SCRAPE_TOPIC = 'ENT' AND COUNTRY_CODE = 'IND' ;

SELECT SCRAPE_SOURCE, COUNT(1) FROM WEB_SCRAPE_RAW_L WHERE SCRAPE_TOPIC = 'ENT' AND COUNTRY_CODE = 'IND' GROUP BY SCRAPE_SOURCE ;

UPDATE WEB_SCRAPE_RAW_L SET SCRAPE_TOPIC = 'CELEB' WHERE SCRAPE_TOPIC = 'ENT' AND COUNTRY_CODE = 'IND' AND SCRAPE_SOURCE IN ('TOI/ENT', 'HT/ENT') ;

SELECT LENGTH(SCRAPE_DATE) LS, LENGTH(NEWS_DTM_RAW) LNDTM, LENGTH(NEWS_DATE) LND, COUNT(1) FROM WEB_SCRAPE_RAW_L GROUP BY LENGTH(SCRAPE_DATE), LENGTH(NEWS_DTM_RAW), LENGTH(NEWS_DATE) ;

SELECT LENGTH(SCRAPE_DATE) LS, LENGTH(NEWS_DTM_RAW) LNDTM, LENGTH(NEWS_DATE) LND, COUNT(1) FROM WEB_SCRAPE_RAW GROUP BY LENGTH(SCRAPE_DATE), LENGTH(NEWS_DTM_RAW), LENGTH(NEWS_DATE) ;

SELECT SCRAPE_TOPIC, COUNTRY_CODE, COUNT(1)  FROM WEB_SCRAPE_RAW where SCRAPE_DATE > CURRENT_DATE() - INTERVAL 5 DAY AND IFNULL(MOVED_TO_POST_FLAG, 'N') = 'N'
GROUP BY SCRAPE_TOPIC, COUNTRY_CODE ORDER BY 1, 2, 3 DESC ;

SELECT SCRAPE_TOPIC, COUNTRY_CODE, COUNT(1)  FROM WEB_SCRAPE_RAW_L where SCRAPE_DATE > CURRENT_DATE() - INTERVAL 5 DAY AND IFNULL(MOVED_TO_POST_FLAG, 'N') = 'N'
GROUP BY SCRAPE_TOPIC, COUNTRY_CODE ORDER BY 1, 2, 3 DESC ;

SELECT C.TOPICID, K.KEYID, K.KEYWORDS, SUM(CASE WHEN U.COUNTRY_CODE = 'USA' THEN 1 ELSE 0 END) USACOUNT
, SUM(CASE WHEN U.COUNTRY_CODE = 'IND' THEN 1 ELSE 0 END) INDCOUNT
, SUM(CASE WHEN U.COUNTRY_CODE = 'GGG' THEN 1 ELSE 0 END) GGGCOUNT
FROM OPN_P_KW K, OPN_USER_CARTS C, OPN_USERLIST U
WHERE C.KEYID = K.KEYID AND C.USERID = U.USERID AND U.BOT_FLAG = 'Y' -- AND U.COUNTRY_CODE = 'USA'
AND K.KEYWORDS LIKE '%NEWS' AND K.NEWS_ONLY_FLAG = 'Y' GROUP BY C.TOPICID, K.KEYID, K.KEYWORDS ORDER BY K.KEYID ;

SELECT LENGTH(SCRAPE_DATE) LS, LENGTH(NEWS_DTM_RAW) LNDTM, LENGTH(NEWS_DATE) LND, COUNT(1) FROM WEB_SCRAPE_RAW GROUP BY LENGTH(SCRAPE_DATE), LENGTH(NEWS_DTM_RAW), LENGTH(NEWS_DATE) ;
SELECT str_TO_DATE(NEWS_DATE, '%Y-%m-%d') , LENGTH(SCRAPE_DATE) LS, LENGTH(NEWS_DTM_RAW) LNDTM, LENGTH(NEWS_DATE) LND, COUNT(1) FROM WEB_SCRAPE_RAW 
GROUP BY str_TO_DATE(NEWS_DATE, '%Y-%m-%d'), LENGTH(SCRAPE_DATE), LENGTH(NEWS_DTM_RAW), LENGTH(NEWS_DATE) ;

