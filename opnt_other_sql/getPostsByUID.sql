-- getPostsByUserName

DELIMITER //
DROP PROCEDURE IF EXISTS getPostsByUID //
CREATE PROCEDURE getPostsByUID(UID INT, TID INT ,NOFPOSTS INT)
BEGIN

-- SET NAMES utf8;

SELECT INSTREAM.POST_ID, INSTREAM.TOPICID, INSTREAM.POST_DATETIME, INSTREAM.POST_BY_USERID, OU.USERNAME, INSTREAM.POST_CONTENT, INSTREAM.TOTAL_NS 
, IFNULL(POST_LHC.LCOUNT,0) LCOUNT, IFNULL(POST_LHC.HCOUNT,0) HCOUNT, UP.POST_ACTION_TYPE , UUA.ACTION_TYPE UU_ACTION, OPC.POST_COMMENT_COUNT
FROM (
SELECT P.POST_ID, P.TOPICID, P.POST_DATETIME, P.POST_BY_USERID, P.POST_CONTENT, UN.TOTAL_NS
FROM OPN_POSTS P, (SELECT C.USERID, C.TOPICID, SUM(B.NET_STRENGTH) TOTAL_NS FROM OPN_NC_CLUSTERS A, OPN_CLUSTER_RELATIONSHIPS B, OPN_NC_CLUSTERS C
WHERE A.CLUSTER_ID = B.CLUSTER_ID AND B.RELATED_CLUSTER_ID = C.CLUSTER_ID
AND A.USERID = UID AND A.TOPICID = TID  
AND C.USERID NOT IN (SELECT ON_USERID FROM OPN_USER_USER_ACTION WHERE BY_USERID = UID AND TOPICID = TID  AND ACTION_TYPE = 'KO')
GROUP BY C.USERID, C.TOPICID) UN
WHERE UN.USERID = P.POST_BY_USERID
AND UN.TOPICID = P.TOPICID
AND (P.CLEAN_POST_FLAG = 'Y' OR P.POST_BY_USERID = UID)
) INSTREAM
INNER JOIN OPN_USERLIST OU
ON INSTREAM.POST_BY_USERID = OU.USERID
LEFT OUTER JOIN 
(SELECT CAUSE_POST_ID, SUM(CASE WHEN POST_ACTION_TYPE = 'L' THEN 1 ELSE 0 END) LCOUNT 
, SUM(CASE WHEN POST_ACTION_TYPE = 'H' THEN 1 ELSE 0 END) HCOUNT 
FROM OPN_USER_POST_ACTION GROUP BY CAUSE_POST_ID) POST_LHC
ON INSTREAM.POST_ID = POST_LHC.CAUSE_POST_ID
LEFT OUTER JOIN OPN_USER_POST_ACTION UP ON INSTREAM.POST_ID = UP.CAUSE_POST_ID AND UP.ACTION_BY_USERID = UID 
LEFT OUTER JOIN OPN_USER_USER_ACTION UUA ON INSTREAM.POST_BY_USERID = UUA.ON_USERID AND UUA.BY_USERID = UID
LEFT OUTER JOIN (SELECT CAUSE_POST_ID, COUNT(*) POST_COMMENT_COUNT FROM OPN_POST_COMMENTS WHERE CLEAN_COMMENT_FLAG = 'Y' GROUP BY CAUSE_POST_ID) OPC 
ON INSTREAM.POST_ID = OPC.CAUSE_POST_ID
ORDER BY POST_DATETIME DESC, TOTAL_NS DESC  LIMIT NOFPOSTS
;
  
END //
DELIMITER ;

-- 