
-- 

DELIMITER //
DROP PROCEDURE IF EXISTS OPN_SUPPRESS_DUPES //
CREATE PROCEDURE OPN_SUPPRESS_DUPES(TID INT, INTVL INT, D_OR_M VARCHAR(10))
THISPROC: BEGIN

/* 

06/21/2019 AST: This proc is for deduping the posts. It should be run every day after the STP processes are over
I may include it as a standard proc at the end of every STP - or it can be included at the end of every STP run.
D_OR_M input param is for DAY OR MONTH.

10/11/2020 AST: Changing the base of the post dedupe from POST_DATETIME to POST_PROCESSED_DTM
Also using the BOT_FLAG = 'Y' so that the non-BOT posts are not deduped

*/

DROP TABLE IF EXISTS OPN_DUPE_POST_BASE ;

CASE WHEN D_OR_M = 'DAY' THEN 

CREATE TABLE OPN_DUPE_POST_BASE AS
SELECT P.POST_CONTENT, MAX(P.POST_ID) MAX_POST_ID FROM OPN_POSTS P, OPN_USERLIST U
WHERE P.POST_BY_USERID = U.USERID AND U.BOT_FLAG = 'Y'
AND P.POST_PROCESSED_DTM > NOW() - INTERVAL INTVL DAY   
GROUP BY P.POST_CONTENT HAVING COUNT(P.POST_ID) > 1;

UPDATE OPN_POSTS P, OPN_DUPE_POST_BASE D
SET P.CLEAN_POST_FLAG = 'Z' WHERE P.POST_CONTENT = D.POST_CONTENT AND P.POST_ID <> D.MAX_POST_ID
AND P.POST_PROCESSED_DTM > NOW() - INTERVAL INTVL DAY ;

WHEN D_OR_M = 'MONTH' THEN 

CREATE TABLE OPN_DUPE_POST_BASE AS
SELECT P.POST_CONTENT, MAX(P.POST_ID) MAX_POST_ID FROM OPN_POSTS P, OPN_USERLIST U
WHERE P.POST_BY_USERID = U.USERID AND U.BOT_FLAG = 'Y'
AND P.POST_PROCESSED_DTM > NOW() - INTERVAL INTVL MONTH   
GROUP BY P.POST_CONTENT HAVING COUNT(P.POST_ID) > 1;

UPDATE OPN_POSTS P, OPN_DUPE_POST_BASE D
SET P.CLEAN_POST_FLAG = 'Z' WHERE P.POST_CONTENT = D.POST_CONTENT AND P.POST_ID <> D.MAX_POST_ID
AND P.POST_PROCESSED_DTM > NOW() - INTERVAL INTVL MONTH ;

END CASE ;



  
  
  
END; //
 DELIMITER ;
 
 -- 