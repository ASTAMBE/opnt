-- commentsByPostNW

DELIMITER //
DROP PROCEDURE IF EXISTS commentsByPostNW //
CREATE PROCEDURE commentsByPostNW(postid INT, usid varchar(45), sortOrder varchar(10)
, fromindex INT, toindex INT )
BEGIN

/* 04272018 AST: Adding userid (the user_uuid of the logged in user) as an input param. 
The PHP (API) will have to be changed
to provide the value.

This is being done in order to filter the comments that are from users who have been 
kicked out by the current logged in user 

08/15/2019 AST: Changed the old cluster-based networking algo that was used 
for comments from within the network */

/* 26/03/2020 Rohit :- Add the OU.DP_URL in the select statement */
/* 04/22/2020: AST: Rebuilding this as NW proc. Also adding the Parent Post/comment */

/* 05/15/2020 AST: Added logic to filter when parent CBUID is also not in network 
	06/18/2020 AST: Added  AND A.CART = B.CART to the OLDONTOP case - had been left out inadvertantly
    
    08/09/2020 AST: COnfirmed  */
    
/* 	11/08/2020 AST: Now the non-clean posts are being changed to a standard warning replacement. 
	Hence, removing the filter AND OPC.CLEAN_COMMENT_FLAG = 'Y' from all cases below */
    
/*

	11/28/2021 AST: Incorporating the APPNAME = 'DB8-IND-POL' logic

*/

DECLARE ORIG_UID, TID, CAUSE_POST_BYUID, PARENT_CMT_BYUID INT ;
DECLARE THIS_UNAME, PARENT_UNAME, CAUSE_POST_UNAME, SORTBY, APPNAME VARCHAR(40) ;

SELECT U1.USERID, U1.USERNAME INTO ORIG_UID, THIS_UNAME 
FROM OPN_USERLIST U1 WHERE U1.USER_UUID = usid ;
SELECT OP1.TOPICID, OP1.POST_BY_USERID INTO TID, CAUSE_POST_BYUID 
FROM OPN_POSTS OP1 WHERE OP1.POST_ID = postid ;
SELECT U2.USERNAME INTO PARENT_UNAME FROM OPN_USERLIST U2 
WHERE U2.USERID = CAUSE_POST_BYUID ;

SELECT APP_NAME INTO APPNAME FROM OPN_APP_PARAMS ;

CASE WHEN APPNAME = 'DB8-IND-POL' THEN 

CASE WHEN sortOrder = 'NEWONTOP' THEN  

SELECT OPC.TOPICID, OPC.CAUSE_POST_ID,OPC.COMMENT_ID
, OPC.COMMENT_BY_USERID, OU.USERNAME COMMENT_BY_UNAME
, OU.DP_URL, OPC.COMMENT_CONTENT, OPC.COMMENT_DTM
, OPC.EMBEDDED_CONTENT, OPC.EMBEDDED_FLAG
, (CASE WHEN OPC.COMMENT_TYPE = 'CONP' THEN OPC.COMMENT_ID ELSE OPC.PARENT_COMMENT_ID END ) PARENT_COMMENT_ID
, OPC.PARENT_COMMENT_UNAME, OPC.PARENT_COMMENT_DTM
, OPC.PARENT_COMMENT_CONTENT, OPC.PARENT_MEDIA_CONTENT
, OPC.PARENT_COMMENT_BYUID, OPC.COMMENT_TYPE
, OPC.MEDIA_CONTENT, OPC.MEDIA_FLAG
FROM OPN_POST_COMMENTS OPC, OPN_USERLIST OU
WHERE OPC.COMMENT_BY_USERID = OU.USERID
AND OPC.COMMENT_BY_USERID IN (SELECT DISTINCT B.USERID  FROM
(SELECT USERID, TOPICID, CART, KEYID FROM OPN_USER_CARTS 
WHERE TOPICID = TID AND USERID = ORIG_UID
/* 11/28/2021 AST: Adding the exclusion of POLITICS NEWS KW  */
AND KEYID NOT IN (SELECT KEYID FROM OPN_P_KW WHERE IFNULL(NEWS_ONLY_FLAG, 'N') = 'Y')
/* End of Adding the exclusion of POLITICS NEWS KW  */
) A ,
(SELECT USERID, TOPICID, CART, KEYID FROM OPN_USER_CARTS 
WHERE TOPICID = TID  
AND USERID NOT IN (SELECT ON_USERID FROM OPN_USER_USER_ACTION 
WHERE TOPICID = TID AND BY_USERID = ORIG_UID AND ACTION_TYPE IN ('KO', 'CKO'))
) B
WHERE A.TOPICID = B.TOPICID AND A.KEYID = B.KEYID AND A.CART = B.CART )
AND OPC.PARENT_COMMENT_BYUID IN (SELECT DISTINCT B.USERID  FROM
(SELECT USERID, TOPICID, CART, KEYID FROM OPN_USER_CARTS 
WHERE TOPICID = TID AND USERID = ORIG_UID
/* 11/28/2021 AST: Adding the exclusion of POLITICS NEWS KW  */
AND KEYID NOT IN (SELECT KEYID FROM OPN_P_KW WHERE IFNULL(NEWS_ONLY_FLAG, 'N') = 'Y')
/* End of Adding the exclusion of POLITICS NEWS KW  */
) A ,
(SELECT USERID, TOPICID, CART, KEYID FROM OPN_USER_CARTS 
WHERE TOPICID = TID  
AND USERID NOT IN (SELECT ON_USERID FROM OPN_USER_USER_ACTION 
WHERE TOPICID = TID AND BY_USERID = ORIG_UID AND ACTION_TYPE IN ('KO', 'CKO'))
) B
WHERE A.TOPICID = B.TOPICID AND A.KEYID = B.KEYID AND A.CART = B.CART )
AND OPC.CAUSE_POST_ID = postid
-- AND OPC.CLEAN_COMMENT_FLAG = 'Y'
AND OPC.COMMENT_DELETE_FLAG = 'N'
ORDER BY  OPC.COMMENT_DTM DESC ;


WHEN sortOrder = 'OLDONTOP' THEN 

SELECT OPC.TOPICID, OPC.CAUSE_POST_ID,OPC.COMMENT_ID
, OPC.COMMENT_BY_USERID, OU.USERNAME COMMENT_BY_UNAME
, OU.DP_URL, OPC.COMMENT_CONTENT, OPC.COMMENT_DTM
, OPC.EMBEDDED_CONTENT, OPC.EMBEDDED_FLAG
, (CASE WHEN OPC.COMMENT_TYPE = 'CONP' THEN OPC.COMMENT_ID ELSE OPC.PARENT_COMMENT_ID END ) PARENT_COMMENT_ID
, OPC.PARENT_COMMENT_UNAME, OPC.PARENT_COMMENT_DTM
, OPC.PARENT_COMMENT_CONTENT, OPC.PARENT_MEDIA_CONTENT
, OPC.PARENT_COMMENT_BYUID, OPC.COMMENT_TYPE
, OPC.MEDIA_CONTENT, OPC.MEDIA_FLAG
FROM OPN_POST_COMMENTS OPC, OPN_USERLIST OU
WHERE OPC.COMMENT_BY_USERID = OU.USERID
AND OPC.COMMENT_BY_USERID IN (SELECT DISTINCT B.USERID  FROM
(SELECT USERID, TOPICID, CART, KEYID FROM OPN_USER_CARTS 
WHERE TOPICID = TID AND USERID = ORIG_UID
/* 11/28/2021 AST: Adding the exclusion of POLITICS NEWS KW  */
AND KEYID NOT IN (SELECT KEYID FROM OPN_P_KW WHERE IFNULL(NEWS_ONLY_FLAG, 'N') = 'Y')
/* End of Adding the exclusion of POLITICS NEWS KW  */
) A ,
(SELECT USERID, TOPICID, CART, KEYID FROM OPN_USER_CARTS 
WHERE TOPICID = TID  
AND USERID NOT IN (SELECT ON_USERID FROM OPN_USER_USER_ACTION 
WHERE TOPICID = TID AND BY_USERID = ORIG_UID AND ACTION_TYPE IN ('KO', 'CKO'))
) B
WHERE A.TOPICID = B.TOPICID AND A.KEYID = B.KEYID  AND A.CART = B.CART)
AND OPC.PARENT_COMMENT_BYUID IN (SELECT DISTINCT B.USERID  FROM
(SELECT USERID, TOPICID, CART, KEYID FROM OPN_USER_CARTS 
WHERE TOPICID = TID AND USERID = ORIG_UID
/* 11/28/2021 AST: Adding the exclusion of POLITICS NEWS KW  */
AND KEYID NOT IN (SELECT KEYID FROM OPN_P_KW WHERE IFNULL(NEWS_ONLY_FLAG, 'N') = 'Y')
/* End of Adding the exclusion of POLITICS NEWS KW  */
) A ,
(SELECT USERID, TOPICID, CART, KEYID FROM OPN_USER_CARTS 
WHERE TOPICID = TID  
AND USERID NOT IN (SELECT ON_USERID FROM OPN_USER_USER_ACTION 
WHERE TOPICID = TID AND BY_USERID = ORIG_UID AND ACTION_TYPE IN ('KO', 'CKO'))
) B
WHERE A.TOPICID = B.TOPICID AND A.KEYID = B.KEYID  AND A.CART = B.CART)
AND OPC.CAUSE_POST_ID = postid
-- AND OPC.CLEAN_COMMENT_FLAG = 'Y'
AND OPC.COMMENT_DELETE_FLAG = 'N'
ORDER BY  OPC.COMMENT_DTM ASC ;


 END CASE ;

 WHEN APPNAME <> 'DB8-IND-POL' THEN 

CASE WHEN sortOrder = 'NEWONTOP' THEN  

SELECT OPC.TOPICID, OPC.CAUSE_POST_ID,OPC.COMMENT_ID
, OPC.COMMENT_BY_USERID, OU.USERNAME COMMENT_BY_UNAME
, OU.DP_URL, OPC.COMMENT_CONTENT, OPC.COMMENT_DTM
, OPC.EMBEDDED_CONTENT, OPC.EMBEDDED_FLAG
, (CASE WHEN OPC.COMMENT_TYPE = 'CONP' THEN OPC.COMMENT_ID ELSE OPC.PARENT_COMMENT_ID END ) PARENT_COMMENT_ID
, OPC.PARENT_COMMENT_UNAME, OPC.PARENT_COMMENT_DTM
, OPC.PARENT_COMMENT_CONTENT, OPC.PARENT_MEDIA_CONTENT
, OPC.PARENT_COMMENT_BYUID, OPC.COMMENT_TYPE
, OPC.MEDIA_CONTENT, OPC.MEDIA_FLAG
FROM OPN_POST_COMMENTS OPC, OPN_USERLIST OU
WHERE OPC.COMMENT_BY_USERID = OU.USERID
AND OPC.COMMENT_BY_USERID IN (SELECT DISTINCT B.USERID  FROM
(SELECT USERID, TOPICID, CART, KEYID FROM OPN_USER_CARTS 
WHERE TOPICID = TID AND USERID = ORIG_UID) A ,
(SELECT USERID, TOPICID, CART, KEYID FROM OPN_USER_CARTS 
WHERE TOPICID = TID  
AND USERID NOT IN (SELECT ON_USERID FROM OPN_USER_USER_ACTION 
WHERE TOPICID = TID AND BY_USERID = ORIG_UID AND ACTION_TYPE IN ('KO', 'CKO'))
) B
WHERE A.TOPICID = B.TOPICID AND A.KEYID = B.KEYID AND A.CART = B.CART )
AND OPC.PARENT_COMMENT_BYUID IN (SELECT DISTINCT B.USERID  FROM
(SELECT USERID, TOPICID, CART, KEYID FROM OPN_USER_CARTS 
WHERE TOPICID = TID AND USERID = ORIG_UID) A ,
(SELECT USERID, TOPICID, CART, KEYID FROM OPN_USER_CARTS 
WHERE TOPICID = TID  
AND USERID NOT IN (SELECT ON_USERID FROM OPN_USER_USER_ACTION 
WHERE TOPICID = TID AND BY_USERID = ORIG_UID AND ACTION_TYPE IN ('KO', 'CKO'))
) B
WHERE A.TOPICID = B.TOPICID AND A.KEYID = B.KEYID AND A.CART = B.CART )
AND OPC.CAUSE_POST_ID = postid
-- AND OPC.CLEAN_COMMENT_FLAG = 'Y'
AND OPC.COMMENT_DELETE_FLAG = 'N'
ORDER BY  OPC.COMMENT_DTM DESC ;


WHEN sortOrder = 'OLDONTOP' THEN 

SELECT OPC.TOPICID, OPC.CAUSE_POST_ID,OPC.COMMENT_ID
, OPC.COMMENT_BY_USERID, OU.USERNAME COMMENT_BY_UNAME
, OU.DP_URL, OPC.COMMENT_CONTENT, OPC.COMMENT_DTM
, OPC.EMBEDDED_CONTENT, OPC.EMBEDDED_FLAG
, (CASE WHEN OPC.COMMENT_TYPE = 'CONP' THEN OPC.COMMENT_ID ELSE OPC.PARENT_COMMENT_ID END ) PARENT_COMMENT_ID
, OPC.PARENT_COMMENT_UNAME, OPC.PARENT_COMMENT_DTM
, OPC.PARENT_COMMENT_CONTENT, OPC.PARENT_MEDIA_CONTENT
, OPC.PARENT_COMMENT_BYUID, OPC.COMMENT_TYPE
, OPC.MEDIA_CONTENT, OPC.MEDIA_FLAG
FROM OPN_POST_COMMENTS OPC, OPN_USERLIST OU
WHERE OPC.COMMENT_BY_USERID = OU.USERID
AND OPC.COMMENT_BY_USERID IN (SELECT DISTINCT B.USERID  FROM
(SELECT USERID, TOPICID, CART, KEYID FROM OPN_USER_CARTS 
WHERE TOPICID = TID AND USERID = ORIG_UID) A ,
(SELECT USERID, TOPICID, CART, KEYID FROM OPN_USER_CARTS 
WHERE TOPICID = TID  
AND USERID NOT IN (SELECT ON_USERID FROM OPN_USER_USER_ACTION 
WHERE TOPICID = TID AND BY_USERID = ORIG_UID AND ACTION_TYPE IN ('KO', 'CKO'))
) B
WHERE A.TOPICID = B.TOPICID AND A.KEYID = B.KEYID  AND A.CART = B.CART)
AND OPC.PARENT_COMMENT_BYUID IN (SELECT DISTINCT B.USERID  FROM
(SELECT USERID, TOPICID, CART, KEYID FROM OPN_USER_CARTS 
WHERE TOPICID = TID AND USERID = ORIG_UID) A ,
(SELECT USERID, TOPICID, CART, KEYID FROM OPN_USER_CARTS 
WHERE TOPICID = TID  
AND USERID NOT IN (SELECT ON_USERID FROM OPN_USER_USER_ACTION 
WHERE TOPICID = TID AND BY_USERID = ORIG_UID AND ACTION_TYPE IN ('KO', 'CKO'))
) B
WHERE A.TOPICID = B.TOPICID AND A.KEYID = B.KEYID  AND A.CART = B.CART)
AND OPC.CAUSE_POST_ID = postid
-- AND OPC.CLEAN_COMMENT_FLAG = 'Y'
AND OPC.COMMENT_DELETE_FLAG = 'N'
ORDER BY  OPC.COMMENT_DTM ASC ;


 END CASE ;
 
 END CASE ;
  
END//
DELIMITER ;

-- 