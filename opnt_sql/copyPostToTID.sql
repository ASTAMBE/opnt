-- copyPostToTID

 DELIMITER //
DROP PROCEDURE IF EXISTS copyPostToTID //
CREATE PROCEDURE copyPostToTID(postid INT, totid INT, tokid INT, touname varchar(40))
BEGIN

/* 	

	10192020 AST: Initial Creation for copying a post from one TID to another TID
	This proc is internal. It will be used only for copying any interesting news item (post) to Trending News KW
    Specific usernames for the three ccodes will be created. They will be used only for posting the Trending News
                  

*/

declare UIDFROM, UIDTO, FROMCARTCNT, TOCARTCNT, TIDTO INT;
declare UNAMEFROM, UNAMETO varchar(40) ;
declare CCODEFROM, CCODETO varchar(3) ;

SET SQL_SAFE_UPDATES = 0;

SELECT U1.USERID, U1.USERNAME, U1.COUNTRY_CODE INTO UIDFROM, UNAMEFROM, CCODEFROM 
FROM OPN_USERLIST U1 WHERE U1.USER_UUID = uuidFrom ;

SELECT U2.USERID, U2.USERNAME, U2.COUNTRY_CODE INTO UIDTO, UNAMETO, CCODETO 
FROM OPN_USERLIST U2 WHERE U2.USER_UUID = uuidTo ;

SET TIDTO = (SELECT IFNULL(MAX(TOPICID),0) FROM OPN_USER_CARTS WHERE USERID = UIDFROM 
AND CREATION_DTM = (SELECT MAX(CREATION_DTM) FROM OPN_USER_CARTS WHERE USERID = UIDFROM) ) ;
SET TOCARTCNT = (SELECT COUNT(1) FROM OPN_USER_CARTS WHERE USERID = UIDTO) ;

/* 	When the Inviter has an empty cart - then the invitee carts are also kept empty or unchanged */

CASE WHEN tid = 0 THEN

CASE WHEN TIDTO = 0 THEN 

INSERT INTO OPN_USER_BHV_LOG(USERNAME, USERID, USER_UUID
, LOGIN_DTM, API_CALL, CONCAT_PARAMS)
VALUES(UNAMEFROM, UIDFROM, uuidFrom
, NOW(), 'copyUserCarts', CONCAT(UIDTO, '-', 'inviter killed his carts'));

SELECT uuidTo, 0, 0 ;

WHEN TIDTO <> 0 THEN

DELETE FROM OPN_USER_INTERESTS WHERE USERID = UIDTO ;

INSERT INTO OPN_USER_INTERESTS(USERID, USER_UUID, INTEREST_ID, INTEREST_NAME
, INTEREST_CODE, CREATION_DTM, USERNAME)
SELECT UIDTO, uuidTo, INTEREST_ID, INTEREST_NAME
, INTEREST_CODE, NOW(), UNAMETO FROM OPN_USER_INTERESTS WHERE USERID = UIDFROM ;

DELETE FROM OPN_USER_CARTS WHERE USERID = UIDTO ;

INSERT INTO OPN_USER_CARTS(USERID, TOPICID, KEYID, CART, CREATION_DTM, LAST_UPDATE_DTM)
SELECT UIDTO, TOPICID, KEYID, CART, NOW(), NOW() FROM OPN_USER_CARTS WHERE USERID = UIDFROM ;

/* USER BHV LOG */

INSERT INTO OPN_USER_BHV_LOG(USERNAME, USERID, USER_UUID, LOGIN_DTM, API_CALL, CONCAT_PARAMS)
VALUES(UNAMEFROM, UIDFROM, uuidFrom, NOW(), 'copyUserCarts', CONCAT(UIDTO, '-', UNAMETO));

SELECT uuidTo, TIDTO, 0 ;

END CASE ;

WHEN tid <> 0 THEN

CASE WHEN postID = 0 THEN 

DELETE FROM OPN_USER_INTERESTS WHERE USERID = UIDTO ;

INSERT INTO OPN_USER_INTERESTS(USERID, USER_UUID, INTEREST_ID, INTEREST_NAME
, INTEREST_CODE, CREATION_DTM, USERNAME)
SELECT UIDTO, uuidTo, INTEREST_ID, INTEREST_NAME
, INTEREST_CODE, NOW(), UNAMETO FROM OPN_USER_INTERESTS WHERE USERID = UIDFROM ;

DELETE FROM OPN_USER_CARTS WHERE USERID = UIDTO ;

INSERT INTO OPN_USER_CARTS(USERID, TOPICID, KEYID, CART, CREATION_DTM, LAST_UPDATE_DTM)
SELECT UIDTO, TOPICID, KEYID, CART, NOW(), NOW() FROM OPN_USER_CARTS WHERE USERID = UIDFROM ;

/* USER BHV LOG */

INSERT INTO OPN_USER_BHV_LOG(USERNAME, USERID, USER_UUID, LOGIN_DTM, API_CALL, CONCAT_PARAMS)
VALUES(UNAMEFROM, UIDFROM, uuidFrom, NOW(), 'copyUserCarts', CONCAT(UIDTO, '-', UNAMETO));

SELECT uuidTo, TIDTO, 0 ;

WHEN  postID <> 0 THEN 

DELETE FROM OPN_USER_INTERESTS WHERE USERID = UIDTO ;

INSERT INTO OPN_USER_INTERESTS(USERID, USER_UUID, INTEREST_ID, INTEREST_NAME
, INTEREST_CODE, CREATION_DTM, USERNAME)
SELECT UIDTO, uuidTo, INTEREST_ID, INTEREST_NAME
, INTEREST_CODE, NOW(), UNAMETO FROM OPN_USER_INTERESTS WHERE USERID = UIDFROM ;

DELETE FROM OPN_USER_CARTS WHERE USERID = UIDTO ;

INSERT INTO OPN_USER_CARTS(USERID, TOPICID, KEYID, CART, CREATION_DTM, LAST_UPDATE_DTM)
SELECT UIDTO, TOPICID, KEYID, CART, NOW(), NOW() FROM OPN_USER_CARTS WHERE USERID = UIDFROM ;

/* USER BHV LOG */

INSERT INTO OPN_USER_BHV_LOG(USERNAME, USERID, USER_UUID, LOGIN_DTM, API_CALL, CONCAT_PARAMS)
VALUES(UNAMEFROM, UIDFROM, uuidFrom, NOW(), 'copyUserCarts', CONCAT(UIDTO, '-', UNAMETO));

SELECT uuidTo, TIDTO, postID ;

END CASE ;

END CASE ;


END //
DELIMITER ;

-- 