-- createBOTDiscussion

DELIMITER //
DROP PROCEDURE IF EXISTS createBOTDiscussion //
CREATE PROCEDURE createBOTDiscussion(CREATION_TYPE varchar(40), source_row_id INT, ccode VARCHAR(5), CARTVAL VARCHAR(3),
tid INT, message varchar(2000) , embedded_content varchar(1000), cmnt1 varchar(2000), cmnt2 varchar(2000) )
thisProc: BEGIN

/*   
08/06/2023 AST:Creating this proc to create discussion posts by BOTs.
 08/14/2023 AST: Made small changes - like ccode lowercase and source_row -> source_row_id
 
 08/16/2023 AST: Adding the post STD sweep to WSR _CONVERTED by adding scr_src (scrape_source)
*/

declare  orig_uid, MATCHKID, POSTID, CBYUID1, CBYUID2 INT;
DECLARE UNAME,fromTable, COMMENTER1, COMMENTER2, scr_src, scr_topic VARCHAR(30) ;
DECLARE UUID VARCHAR(50) ;
DECLARE SUSPUSER, LIKECODE VARCHAR(5) ;
DECLARE URL, newsTitle, newsExcrpt varchar(1000) ;

SET MATCHKID = (SELECT CASE WHEN tid = 1 then 105087
WHEN tid = 2 THEN 105654
WHEN tid = 3 THEN 105108
WHEN tid = 4 THEN 105653 
WHEN tid = 5 THEN 105655
WHEN tid = 8 THEN 80005
WHEN tid = 10 THEN 105089 END ) ;

SET LIKECODE = (SELECT CASE WHEN CARTVAL = 'L' THEN 'L1' ELSE 'H1' END) ;

SELECT USERID, USERNAME, USER_UUID INTO orig_uid, UNAME, UUID FROM (
SELECT U1.USERID, U1.USERNAME, U1.USER_UUID, U1.COUNTRY_CODE, COUNT(DISTINCT C1.KEYID) KEYCNT FROM OPN_USER_CARTS C1, OPN_USERLIST U1
WHERE C1.USERID = U1.USERID AND U1.COUNTRY_CODE = ccode AND C1.TOPICID = tid AND U1.BOT_FLAG = 'Y'
and EXISTS (SELECT 1 FROM OPN_USER_CARTS C2  WHERE C2.USERID = C1.USERID AND C2.KEYID = MATCHKID AND C2.CART = CARTVAL)
GROUP BY U1.USERID HAVING COUNT(DISTINCT C1.KEYID) > 10 ORDER BY RAND() LIMIT 1)Q ;

-- SELECT UNAME ;

-- LEAVE thisProc ;

/* Adding user action logging portion */

INSERT INTO OPN_USER_BHV_LOG(USERNAME, USERID, USER_UUID, LOGIN_DTM, API_CALL, CONCAT_PARAMS)
VALUES(UNAME, orig_uid, UUID, NOW(), 'createBOTDiscussion', CONCAT(tid,'-',ccode));

/* end of use action tracking */

CASE WHEN CREATION_TYPE = 'ORIG_DISCUSSION' THEN

INSERT INTO OPN_POSTS_RAW(TOPICID, POST_DATETIME, POST_BY_USERID, POST_CONTENT, DEMO_POST_FLAG
,EMBEDDED_CONTENT,EMBEDDED_FLAG, POSTOR_COUNTRY_CODE,MEDIA_CONTENT,MEDIA_FLAG, STP_PROC_NAME)
VALUES (tid, NOW(), orig_uid, message, 'N', '', 'N', ccode, '', 'N', 'ORIG_DISCUSSION');

SELECT MAX(POST_ID) INTO POSTID FROM OPN_POSTS WHERE POST_BY_USERID = orig_uid AND STP_PROC_NAME = 'ORIG_DISCUSSION'
AND POST_CONTENT = message ;

CALL userActionCommon(UUID, 'POST', 'L1', POSTID) ;

SELECT USERID, USERNAME INTO CBYUID1, COMMENTER1 FROM (
SELECT U1.USERID, U1.USERNAME, U1.COUNTRY_CODE, COUNT(DISTINCT C1.KEYID) KEYCNT FROM OPN_USER_CARTS C1, OPN_USERLIST U1
WHERE C1.USERID = U1.USERID AND U1.COUNTRY_CODE = ccode AND C1.TOPICID = tid AND U1.BOT_FLAG = 'Y'
and EXISTS (SELECT 1 FROM OPN_USER_CARTS C2  WHERE C2.USERID = C1.USERID AND C2.KEYID = MATCHKID AND C2.CART = CARTVAL)
GROUP BY U1.USERID HAVING COUNT(DISTINCT C1.KEYID) > 10 ORDER BY RAND() LIMIT 1)Q ;

SELECT USERID, USERNAME INTO CBYUID2, COMMENTER2 FROM (
SELECT U1.USERID, U1.USERNAME, U1.COUNTRY_CODE, COUNT(DISTINCT C1.KEYID) KEYCNT FROM OPN_USER_CARTS C1, OPN_USERLIST U1
WHERE C1.USERID = U1.USERID AND U1.COUNTRY_CODE = ccode AND C1.TOPICID = tid AND U1.BOT_FLAG = 'Y'
and EXISTS (SELECT 1 FROM OPN_USER_CARTS C2  WHERE C2.USERID = C1.USERID AND C2.KEYID = MATCHKID AND C2.CART = CARTVAL)
GROUP BY U1.USERID HAVING COUNT(DISTINCT C1.KEYID) > 10 ORDER BY RAND() LIMIT 1)Q ;

INSERT INTO OPN_POST_COMMENTS_RAW 
(CAUSE_POST_ID, POST_BY_USERID, TOPICID, COMMENT_SEQ, COMMENT_CONTENT, COMMENT_BY_USERID, COMMENT_BY_UNAME
, PARENT_COMMENT_CONTENT, PARENT_COMMENT_BYUID, PARENT_COMMENT_UNAME, PARENT_MEDIA_CONTENT
, PARENT_MEDIA_FLAG, PARENT_COMMENT_DTM
,COMMENT_DTM,EMBEDDED_CONTENT,EMBEDDED_FLAG, COMMENT_TYPE, MEDIA_CONTENT, MEDIA_FLAG) 
VALUES
(POSTID, orig_uid, tid, 1, cmnt1, CBYUID1, COMMENTER1
, cmnt1, CBYUID1, COMMENTER1, ''
, 'N', NOW()
, now(), '', 'N', 'CONP', '', 'N');

INSERT INTO OPN_POST_COMMENTS_RAW 
(CAUSE_POST_ID, POST_BY_USERID, TOPICID, COMMENT_SEQ, COMMENT_CONTENT, COMMENT_BY_USERID, COMMENT_BY_UNAME
, PARENT_COMMENT_CONTENT, PARENT_COMMENT_BYUID, PARENT_COMMENT_UNAME, PARENT_MEDIA_CONTENT
, PARENT_MEDIA_FLAG, PARENT_COMMENT_DTM
,COMMENT_DTM,EMBEDDED_CONTENT,EMBEDDED_FLAG, COMMENT_TYPE, MEDIA_CONTENT, MEDIA_FLAG) 
VALUES
(POSTID, orig_uid, tid, 1, cmnt2, CBYUID2, COMMENTER2
, cmnt2, CBYUID2, COMMENTER2, ''
, 'N', NOW()
, now(), '', 'N', 'CONP', '', 'N');

WHEN CREATION_TYPE = 'SCRAPE_TO_DISC' THEN

SELECT NEWS_URL, NEWS_HEADLINE, NEWS_EXCERPT, SCRAPE_SOURCE, SCRAPE_TOPIC into URL, newsTitle, newsExcrpt, scr_src, scr_topic 
FROM WEB_SCRAPE_RAW_L WHERE ROW_ID = source_row_id ;

INSERT INTO OPN_POSTS_RAW(TOPICID, POST_DATETIME, POST_BY_USERID, POST_CONTENT, DEMO_POST_FLAG
,EMBEDDED_CONTENT,EMBEDDED_FLAG, POSTOR_COUNTRY_CODE,MEDIA_CONTENT,MEDIA_FLAG, STP_PROC_NAME)
VALUES (tid, NOW(), orig_uid, newsTitle, 'N', '', 'N', ccode, '', 'N', 'SCRAPE_TO_DISC');

SELECT MAX(POST_ID) INTO POSTID FROM OPN_POSTS WHERE POST_BY_USERID = orig_uid AND STP_PROC_NAME = 'SCRAPE_TO_DISC'
AND POST_CONTENT = newsTitle ;

CALL userActionCommon(UUID, 'POST', LIKECODE, POSTID) ;

INSERT INTO OPN_POST_COMMENTS_RAW 
(CAUSE_POST_ID, POST_BY_USERID, TOPICID, COMMENT_SEQ, COMMENT_CONTENT, COMMENT_BY_USERID, COMMENT_BY_UNAME
, PARENT_COMMENT_CONTENT, PARENT_COMMENT_BYUID, PARENT_COMMENT_UNAME, PARENT_MEDIA_CONTENT
, PARENT_MEDIA_FLAG, PARENT_COMMENT_DTM
,COMMENT_DTM,EMBEDDED_CONTENT,EMBEDDED_FLAG, COMMENT_TYPE, MEDIA_CONTENT, MEDIA_FLAG) 
VALUES
(POSTID, orig_uid, tid, 1, URL, orig_uid, UNAME
, URL, orig_uid, UNAME, ''
, 'N', NOW()
, now(), '', 'N', 'CONP', '', 'N');

SELECT USERID, USERNAME INTO CBYUID1, COMMENTER1 FROM (
SELECT U1.USERID, U1.USERNAME, U1.COUNTRY_CODE, COUNT(DISTINCT C1.KEYID) KEYCNT FROM OPN_USER_CARTS C1, OPN_USERLIST U1
WHERE C1.USERID = U1.USERID AND U1.COUNTRY_CODE = ccode AND C1.TOPICID = tid AND U1.BOT_FLAG = 'Y'
and EXISTS (SELECT 1 FROM OPN_USER_CARTS C2  WHERE C2.USERID = C1.USERID AND C2.KEYID = MATCHKID AND C2.CART = CARTVAL)
GROUP BY U1.USERID HAVING COUNT(DISTINCT C1.KEYID) > 10 ORDER BY RAND() LIMIT 1)Q ;

INSERT INTO OPN_POST_COMMENTS_RAW 
(CAUSE_POST_ID, POST_BY_USERID, TOPICID, COMMENT_SEQ, COMMENT_CONTENT, COMMENT_BY_USERID, COMMENT_BY_UNAME
, PARENT_COMMENT_CONTENT, PARENT_COMMENT_BYUID, PARENT_COMMENT_UNAME, PARENT_MEDIA_CONTENT
, PARENT_MEDIA_FLAG, PARENT_COMMENT_DTM
,COMMENT_DTM,EMBEDDED_CONTENT,EMBEDDED_FLAG, COMMENT_TYPE, MEDIA_CONTENT, MEDIA_FLAG) 
VALUES
(POSTID, orig_uid, tid, 1, newsExcrpt, CBYUID1, COMMENTER1
, newsExcrpt, CBYUID1, COMMENTER1, ''
, 'N', NOW()
, now(), '', 'N', 'CONP', '', 'N');

INSERT INTO WSR_CONVERTED(SCRAPE_DATE, SCRAPE_SOURCE, SCRAPE_TOPIC, COUNTRY_CODE, NEWS_URL, NEWS_HEADLINE, NEWS_EXCERPT, SCRAPE_TAG1, STP_PROCESS) 
VALUES(CURRENT_DATE(), scr_src, scr_topic, ccode, URL, newsTitle, newsExcrpt, CONCAT('POST_ID=', POSTID, ' PBUID=', orig_uid, ' CBYUID=', CBYUID1), 'SCRAPE_TO_DISC') ;

DELETE FROM WEB_SCRAPE_RAW_L WHERE ROW_ID = source_row_id ;

WHEN CREATION_TYPE = 'STD_NO_EXCRPT' THEN

SELECT NEWS_URL, NEWS_HEADLINE, NEWS_EXCERPT, SCRAPE_SOURCE, SCRAPE_TOPIC into URL, newsTitle, newsExcrpt, scr_src, scr_topic 
FROM WEB_SCRAPE_RAW_L WHERE ROW_ID = source_row_id ;

INSERT INTO OPN_POSTS_RAW(TOPICID, POST_DATETIME, POST_BY_USERID, POST_CONTENT, DEMO_POST_FLAG
,EMBEDDED_CONTENT,EMBEDDED_FLAG, POSTOR_COUNTRY_CODE,MEDIA_CONTENT,MEDIA_FLAG, STP_PROC_NAME)
VALUES (tid, NOW(), orig_uid, newsTitle, 'N', '', 'N', ccode, '', 'N', 'STD_NO_EXCRPT');

SELECT MAX(POST_ID) INTO POSTID FROM OPN_POSTS WHERE POST_BY_USERID = orig_uid AND STP_PROC_NAME = 'STD_NO_EXCRPT'
AND POST_CONTENT = newsTitle ;

CALL userActionCommon(UUID, 'POST', LIKECODE, POSTID) ;

INSERT INTO OPN_POST_COMMENTS_RAW 
(CAUSE_POST_ID, POST_BY_USERID, TOPICID, COMMENT_SEQ, COMMENT_CONTENT, COMMENT_BY_USERID, COMMENT_BY_UNAME
, PARENT_COMMENT_CONTENT, PARENT_COMMENT_BYUID, PARENT_COMMENT_UNAME, PARENT_MEDIA_CONTENT
, PARENT_MEDIA_FLAG, PARENT_COMMENT_DTM
,COMMENT_DTM,EMBEDDED_CONTENT,EMBEDDED_FLAG, COMMENT_TYPE, MEDIA_CONTENT, MEDIA_FLAG) 
VALUES
(POSTID, orig_uid, tid, 1, URL, orig_uid, UNAME
, URL, orig_uid, UNAME, ''
, 'N', NOW()
, now(), '', 'N', 'CONP', '', 'N');

INSERT INTO WSR_CONVERTED(SCRAPE_DATE, SCRAPE_SOURCE, SCRAPE_TOPIC, COUNTRY_CODE, NEWS_URL, NEWS_HEADLINE, NEWS_EXCERPT, SCRAPE_TAG1, STP_PROCESS) 
VALUES(CURRENT_DATE(), scr_src, scr_topic, ccode, URL, newsTitle, newsExcrpt, CONCAT('POST_ID=', POSTID, ' PBUID=', orig_uid), 'STD_NO_EXCRPT') ;

DELETE FROM WEB_SCRAPE_RAW_L WHERE ROW_ID = source_row_id ;

END CASE ;

END; //
 DELIMITER ;
 
 -- 