-- deleteUserByUsername

DELIMITER //
DROP PROCEDURE IF EXISTS deleteUserByUsername //
CREATE PROCEDURE deleteUserByUsername(uname varchar(30), LOGIN_TYPE_OS VARCHAR(50))
thisProc: BEGIN

DECLARE UID INT;
DECLARE UUID VARCHAR(60) ;

SET SQL_SAFE_UPDATES = 0;
SELECT USERID, USER_UUID INTO UID, UUID FROM OPN_USERLIST WHERE USERNAME = uname ;

-- DELETE FROM OPN_NC_CLUSTERS WHERE USERID = UID ;

-- DELETE FROM OPN_POSTS_RAW WHERE POST_BY_USERID = UID ;

DELETE FROM OPN_POSTS WHERE POST_BY_USERID = UID ;

-- DELETE FROM OPN_POST_COMMENTS_RAW WHERE COMMENT_BY_USERID = UID ;

DELETE FROM OPN_POST_COMMENTS WHERE COMMENT_BY_USERID = UID ;

DELETE FROM OPN_USER_POST_ACTION WHERE ACTION_BY_USERID = UID ;

DELETE FROM OPN_USER_USER_ACTION WHERE BY_USERID = UID ;

DELETE FROM OPN_POST_SEARCH_T WHERE POST_BY_UID = UID ;

DELETE FROM OPN_USER_CARTS WHERE USERID = UID ;

DELETE FROM OPN_USER_INTERESTS WHERE USERID = UID ;

DELETE FROM OPN_USERTOPIC WHERE USERID = UID ;

INSERT INTO OPN_USER_BHV_LOG(USERNAME, USERID, USER_UUID, LOGIN_DTM, API_CALL, CONCAT_PARAMS)
VALUES(uname, UID, UUID, NOW(), 'deleteUserByUsername', CONCAT(uname,'-',LOGIN_TYPE_OS));

DELETE FROM OPN_USERLIST WHERE USERID = UID ;

END

; //
 DELIMITER ;