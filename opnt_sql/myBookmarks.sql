-- myBookmarks

DELIMITER //
DROP PROCEDURE IF EXISTS myBookmarks //
CREATE PROCEDURE myBookmarks(uuid varchar(45), tid INT, fromindex INT, toindex INT)
BEGIN

/* 	04/21/2021 AST: Initial Creation - Proc for finding all the bookmarked posts by a user
	04/25/2021 AST: Adding the bookmark flag to this proc

*/

declare  orig_uid INT;

SET orig_uid = (SELECT  bringUserid(uuid));

SELECT P.POST_ID, OU.USERNAME POST_BY_USERNAME, OU.DP_URL, P.TOPICID, P.POST_DATETIME, P.POST_CONTENT
, P.MEDIA_CONTENT, P.MEDIA_FLAG, IFNULL(POST_LHC.LCOUNT,0) LCOUNT
, IFNULL(POST_LHC.HCOUNT,0) HCOUNT, IFNULL(OPC.POST_COMMENT_COUNT, 0) POST_COMMENT_COUNT
, CASE WHEN BK.POST_ID IS NOT NULL THEN 'Y' ELSE 'N' END BKMK_FLAG
FROM OPN_POSTS P
INNER JOIN OPN_USERLIST OU ON P.POST_BY_USERID = OU.USERID
INNER JOIN OPN_POST_BOOKMARKS BK ON P.POST_ID = BK.POST_ID AND P.TOPICID = BK.TOPICID
LEFT OUTER JOIN 
(SELECT CAUSE_POST_ID, SUM(CASE WHEN POST_ACTION_TYPE = 'L' THEN 1 ELSE 0 END) LCOUNT 
, SUM(CASE WHEN POST_ACTION_TYPE = 'H' THEN 1 ELSE 0 END) HCOUNT 
FROM OPN_USER_POST_ACTION GROUP BY CAUSE_POST_ID) POST_LHC
ON P.POST_ID = POST_LHC.CAUSE_POST_ID
LEFT OUTER JOIN (SELECT CAUSE_POST_ID, COUNT(1) POST_COMMENT_COUNT FROM OPN_POST_COMMENTS 
WHERE CLEAN_COMMENT_FLAG = 'Y' GROUP BY CAUSE_POST_ID) OPC 
ON P.POST_ID = OPC.CAUSE_POST_ID
WHERE P.POST_BY_USERID NOT IN (SELECT UA.ON_USERID FROM OPN_USER_USER_ACTION UA
WHERE UA.BY_USERID = orig_uid AND UA.TOPICID = 1 AND UA.ACTION_TYPE = 'KO' )
AND BK.USERID = orig_uid AND BK.TOPICID = tid
AND BK.POST_BYUID IN (SELECT  B.USERID FROM
(SELECT C1.USERID, C1.TOPICID, C1.CART, C1.KEYID FROM OPN_USER_CARTS C1 
WHERE C1.USERID = orig_uid AND C1.TOPICID = tid ) A ,
(SELECT C2.USERID, C2.TOPICID, C2.CART, C2.KEYID
FROM OPN_USER_CARTS C2 WHERE C2.TOPICID = tid ) B 
WHERE A.KEYID = B.KEYID -- AND A.CART = B.CART 
)
ORDER BY P.POST_DATETIME DESC LIMIT fromindex, toindex;

END //
DELIMITER ;

-- 