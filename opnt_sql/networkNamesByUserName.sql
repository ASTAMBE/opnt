-- networkNamesByUserName

 DELIMITER //
DROP PROCEDURE IF EXISTS networkNamesByUserName //
CREATE PROCEDURE networkNamesByUserName(UUID varchar(45), topicid INT, fromIndex INT, toIndex INT)
BEGIN

/* 08/19/2020 Kapil: Confirmed 

	08/25/2020 AST: adding CHF for each user
    11/23/2021 AST:  aDDED THE APP-BASED CODE - IF APP IS 'DB8-IND-POL' THEN REMOVE THE POLITICS NEWS
	FROM THE NETWORK CALCULATIONS  

*/

declare  orig_uid INT;
DECLARE UNAME, APPNAME VARCHAR(40);
DECLARE CHFG VARCHAR(5) ;
-- declare tid INT ;
-- declare uuid varchar(45) ;

-- SET @uuid = UID ;
-- SET @tid = TID ;
SELECT USERNAME, USERID, CHAT_FLAG INTO UNAME, orig_uid, CHFG FROM OPN_USERLIST WHERE  USER_UUID = UUID ;
SELECT APP_NAME INTO APPNAME FROM OPN_APP_PARAMS ;

INSERT INTO OPN_USER_BHV_LOG(USERNAME, USERID, USER_UUID, LOGIN_DTM, API_CALL, CONCAT_PARAMS)
VALUES(UNAME, orig_uid, UUID, NOW(), 'networkNamesByUserName', CONCAT(topicid, '-',toindex));

CASE WHEN APPNAME = 'DB8-IND-POL' THEN 

SELECT B.USERID, A.TOPICID, ROUND((COUNT(B.USERID)/D.CSIZE),2) NET_STRENGTH
, OU.USERNAME
, CASE WHEN CHFG = 'N' THEN 'N' ELSE OU.CHAT_FLAG END CHF
, OU.DP_URL, MAX(B.CREATION_DTM) IN_NW_SINCE
FROM
(SELECT C1.USERID, C1.TOPICID, C1.CART, C1.KEYID FROM OPN_USER_CARTS C1 WHERE C1.USERID = orig_uid
AND C1.KEYID NOT IN (SELECT KEYID FROM OPN_P_KW WHERE IFNULL(NEWS_ONLY_FLAG, 'N') = 'Y')) A ,
(SELECT C2.USERID, C2.TOPICID, C2.CART, C2.KEYID, C2.CREATION_DTM FROM OPN_USER_CARTS C2 WHERE 
C2.USERID NOT IN (SELECT OUUA.ON_USERID FROM OPN_USER_USER_ACTION OUUA WHERE OUUA.BY_USERID = orig_uid 
AND OUUA.TOPICID = topicid AND OUUA.ACTION_TYPE = 'KO')) B 
, OPN_USERLIST OU
, (SELECT C3.TOPICID, COUNT(C3.ROW_ID) CSIZE FROM OPN_USER_CARTS C3 WHERE C3.USERID = orig_uid GROUP BY C3.TOPICID) D
WHERE A.TOPICID = B.TOPICID AND A.CART = B.CART AND A.KEYID = B.KEYID 
AND B.USERID = OU.USERID AND A.TOPICID = topicid AND A.TOPICID = D.TOPICID
GROUP BY B.USERID, A.TOPICID, D.CSIZE ORDER BY MAX(B.CREATION_DTM) DESC, COUNT(B.USERID) DESC
LIMIT fromIndex, toIndex;

WHEN APPNAME <> 'DB8-IND-POL' THEN 

SELECT B.USERID, A.TOPICID, ROUND((COUNT(B.USERID)/D.CSIZE),2) NET_STRENGTH
, OU.USERNAME
, CASE WHEN CHFG = 'N' THEN 'N' ELSE OU.CHAT_FLAG END CHF
, OU.DP_URL, MAX(B.CREATION_DTM) IN_NW_SINCE
FROM
(SELECT C1.USERID, C1.TOPICID, C1.CART, C1.KEYID FROM OPN_USER_CARTS C1 WHERE C1.USERID = orig_uid) A ,
(SELECT C2.USERID, C2.TOPICID, C2.CART, C2.KEYID, C2.CREATION_DTM FROM OPN_USER_CARTS C2 WHERE 
C2.USERID NOT IN (SELECT OUUA.ON_USERID FROM OPN_USER_USER_ACTION OUUA WHERE OUUA.BY_USERID = orig_uid 
AND OUUA.TOPICID = topicid AND OUUA.ACTION_TYPE = 'KO')) B 
, OPN_USERLIST OU
, (SELECT C3.TOPICID, COUNT(C3.ROW_ID) CSIZE FROM OPN_USER_CARTS C3 WHERE C3.USERID = orig_uid GROUP BY C3.TOPICID) D
WHERE A.TOPICID = B.TOPICID AND A.CART = B.CART AND A.KEYID = B.KEYID 
AND B.USERID = OU.USERID AND A.TOPICID = topicid AND A.TOPICID = D.TOPICID
GROUP BY B.USERID, A.TOPICID, D.CSIZE ORDER BY MAX(B.CREATION_DTM) DESC, COUNT(B.USERID) DESC
LIMIT fromIndex, toIndex;

END CASE ;

-- SELECT USERID, USERNAME FROM OPN_USERLIST WHERE USERID = orig_uid ;


END //
DELIMITER ;

-- 