-- userOpinions

DELIMITER //
DROP PROCEDURE IF EXISTS userOpinions //
CREATE PROCEDURE `userOpinions`(TID INT, UUID varchar(45))
BEGIN
/* 
	08/26/2021 AST: This proc is used for bringing only the KWs that are already in a user's cart
 */
 
declare  UID INT;
DECLARE UNAME VARCHAR(30) ;
DECLARE CCODE VARCHAR(5) ;

SELECT USERID, USERNAME, COUNTRY_CODE INTO UID, UNAME, CCODE FROM OPN_USERLIST WHERE USER_UUID = UUID ;

/* adding the user action trace portion. */

INSERT INTO OPN_USER_BHV_LOG(USERNAME, USERID, USER_UUID, LOGIN_DTM, API_CALL, CONCAT_PARAMS)
VALUES(UNAME, UID, UUID, NOW(), 'userOpinions', CONCAT(UID,'-',UNAME));


/* end of use action tracking */


/* 05/19/2020 AST: Building the new proc to include the sortOrder
    05/26/2020 AST: Added LIMIT fromIndex , toIndex for limiting the list
    
    06/18/2020 AST: Adding HCNT, LCNT
    05/20/2021 AST: Adding the FILTER of CLEAN_KW_FLAG = 'Y'. This is for ensuring that 
    the wrongly added words (such as 'Indian', 'bollywood' etc. are not shown for selection
    Will add 'J' for Junk as the CLEAN_WORD_FLAG code
    
    09/29/2021 AST: ADDED AND IFNULL(K1.NEWS_ONLY_FLAG, 'N') <> 'Y' 
    10/03/2021 AST: Added AND UC1.CART IN ('H', 'L') to Q1 to filter out the CART = 'S' (skip) words
*/

SELECT Q1.USERID, Q1.TOPICID, Q1.CART, Q1.KEYID, Q1.KEYWORDS, Q1.KW_IMAGE_URL, CNT.HCNT, CNT.LCNT FROM
( 
/* START OF CART PORTION OF SORTER 1 */
SELECT UC1.USERID, UC1.TOPICID, UC1.CART, K1.KEYID, K1.KEYWORDS, S1.SORTER, K1.KW_IMAGE_URL
FROM OPN_P_KW K1
, OPN_USER_CARTS UC1
, (SELECT SORT1.KEYID, COUNT(1) SORTER FROM OPN_USER_CARTS SORT1 WHERE SORT1.TOPICID = 1
GROUP BY SORT1.KEYID ORDER BY COUNT(1) DESC) S1
WHERE UC1.KEYID = K1.KEYID AND UC1.TOPICID = TID AND UC1.USERID = UID AND IFNULL(K1.NEWS_ONLY_FLAG, 'N') <> 'Y' 
AND UC1.KEYID = S1.KEYID AND UC1.CART IN ('H', 'L'))
Q1, (SELECT KEYID, SUM(CASE WHEN CART = 'H' THEN 1 ELSE 0 END) HCNT
, SUM(CASE WHEN CART = 'L' THEN 1 ELSE 0 END) LCNT
FROM OPN_USER_CARTS WHERE TOPICID = TID GROUP BY KEYID) CNT
WHERE Q1.KEYID = CNT.KEYID
ORDER BY Q1.KEYID  ;

END //
DELIMITER ;

-- 
